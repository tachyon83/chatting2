<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Chat Lobby</title>
    <meta name="robots" content="noindex, nofollow" />
    <meta name="keywords" content="" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <link rel="stylesheet" type='text/css' href="/html/css/main.css" />
    <script src="https://cdn.jsdelivr.net/npm/vue"></script>
    <script src='/socket.io/socket.io.js'></script>
    <script>
        const socket = io();
        Vue.prototype.$socket = socket


        // function roomListRefreshServerCall(callback) {
        //     socket.emit('room.list');
        //     socket.on('room.list.response', roomsFromServer => {
        //         callback(roomsFromServer)
        //     })
        // }
        function roomListRefreshServerCall() {
            // socket.emit('profile.list');
            socket.emit('room.list');
            // socket.on('room.list.response', roomsFromServer => {
            //     callback(roomsFromServer)
            // })
        }

        // need to pause this while in a chat room
        // setInterval(() => { roomListRefreshServerCall(roomListRefresher) }, 2000);
        // setInterval(() => { roomListRefreshServerCall() }, 500);

    </script>
</head>

<body>
    <div class="wrapper">
        <h1 class="skip">Chat Lobby</h1>
        <div class="app-wrap">
            <div v-if="showModal" @click.self="closeModal()" class="modal-wrap">
                <div class="modal-basic">
                    <h4 class="modal-tit">NEW ROOM</h4>
                    <form method="post" action="" name="modal-frm" class="modal-frm">
                        <input type="text" placeholder="방 이름을 입력해주세요" v-model="roomName" title="방 이름 입력"
                            class="modal-room-name-input">
                        <div class="modal-room-member-wrap">
                            <input type="number" @keyup="checkNum" v-model="roomUserCount" min="2" max="99"
                                title="방 인원 입력" class="modal-room-user-input">
                            <div class="modal-bnt-wrap">
                                <button @click.stop.prevent="roomUserCount--" class="btn-basic btn-count">-</button>
                                <button @click.stop.prevent="roomUserCount++" class="btn-basic btn-count">+</button>
                            </div>
                        </div>
                        <div class="modal-bnt-wrap">
                            <button @click.stop.prevent="createRoom" class="btn-basic bg-purple">CREATE</button>
                            <button @click.stop.prevent="resetNewRoomModal" class="btn-basic bg-grey">CANCEL</button>
                        </div>
                    </form>
                </div>
            </div>

            <nav class="nav-wrap">
                <ul class="menu-list">
                    <li class="menu-item">
                        <h2 class="skip">홈</h2>
                    </li>
                    <li class="menu-item">
                        <h2 class="skip">게시판</h2>
                    </li>
                    <li class="menu-item">
                        <h2 class="skip">채팅</h2>
                    </li>
                    <li class="menu-item">
                        <h2 class="skip">설정</h2>
                    </li>
                </ul>
            </nav>
            <section class="info-wrap">
                <h3 class="info-tab">
                    Online
                    <span class="info-user-num">99</span>
                </h3>
                <div class="group-list">
                    <userlist v-for="n in 3"></userlist>
                </div>
                <div class="info-tab user-tit user-owner">
                    <span class="user-profile"></span>
                    <span class="user-name">right here</span>
                </div>
            </section>
            <section class="content-wrap">
                <div class="room-wrap">
                    <h3>LIVE CHAT</h3>
                    <button @click="openModal()" class="btn-basic">NEW ROOM</button>
                    <ul class="room-list">
                        <li v-for="roomItem in roomItems" class="room-item">
                            <a href="#">
                                <!-- <span class="room-num">{{roomitem.num | formatRoomNum}}</span> -->
                                <span class="room-num">{{roomItem.roomID | formatRoomNum}}</span>
                                <!-- <span class="room-tit">{{roomitem.tit}}</span> -->
                                <span class="room-tit">{{roomItem.roomTitle}}</span>
                                <span class="room-own">{{roomItem.roomOwner}}</span>
                                <span class="room-user">
                                    <span class="room-user-num">{{roomItem.roomCnt}}</span>/{{roomItem.roomCapacity}}
                                </span>
                            </a>
                        </li>
                    </ul>
                </div>
            </section>
        </div>
    </div>
    <script>
        let menulist = {
            data() {
                return {

                }
            },
            template: `
            <li class="menu-item"><a href="#" class="home"><h2>홈</h2></a></li>
            `
        }

        let roomlist = {
            data() {
                return {
                    full: false,
                }
            },
            template: `
               <li></li>
               `
        }

        let userlist = {
            props: [
                'title'
            ],
            data() {
                return {
                    active: false
                }
            },
            template: `
            <div>
                <h4 class="group-tit" :class="{off : !active}">
                    <a href="#" @click.prevent="active = !active">User</a>
                </h4>
                <ul class="user-list" v-show="active">
                    <li class="user-item user-owner">
                        <a href="#">
                            <span class="user-profile"></span>
                            <span class="user-name">닉네임</span>
                        </a>
                    </li>
                    <li class="user-item">
                        <a href="#">
                            <span class="user-profile"></span>
                            <span class="user-name">닉네임</span>
                        </a>
                    </li>
                    <li class="user-item">
                        <a href="#">
                            <span class="user-profile"></span>
                            <span class="user-name">닉네임</span>
                        </a>
                    </li>
                </ul>
            </div>
            `
        }

        new Vue({
            el: '.app-wrap',
            created() {

                this.userId = JSON.parse('<%-basicInfo %>').userId
                this.roomItems = JSON.parse('<%-basicInfo %>').rooms
                console.log('currRoom: ', JSON.parse('<%-basicInfo %>').roomNumber)
                console.log(this.userId)
                console.log(this.roomItems)
                console.log(this.roomItems[1])

                this.$socket.on('profile.list.response', profilesFromServer => {
                    this.usersList = profilesFromServer
                })

                this.$socket.on('room.list.response', roomsFromServer => {
                    console.log('received')
                    console.log(roomsFromServer)
                    this.roomItems = roomsFromServer
                })
            },
            components: {
                roomlist,
                userlist,
                menulist
            },
            data: {
                usersList: null,
                userId: null,
                showModal: false,
                roomName: null,
                roomUserCount: 1,
                roomItems: null,
                groupItems: [
                    {
                        tit: 'User',
                        own: '방방장장',
                        userlist: [
                            '함수',
                            'lenove',
                            '이벤트바인딩'
                        ]
                    },
                    {
                        tit: 'Group1',
                        own: '방방장장',
                        userlist: [
                            '1252324',
                            '랄라',
                            '도움말도움말'
                        ]
                    },
                    {
                        tit: 'Group2',
                        own: '방방장장',
                        userlist: [
                            '객체가아니라id',
                            'renderingComplete'
                        ]
                    },
                ]
            },
            methods: {
                openModal: function () {
                    this.showModal = true
                },
                closeModal: function () {
                    this.showModal = false
                },
                checkNum: function () {
                    console.log(this.userCount)
                    // userCount < 2 ? userCount = 2 : userCount > 99 ? userCount = 99 : userCount 
                },
                createRoom: function () {
                    const newRoom = {
                        roomId: null,
                        roomPw: null,
                        roomTitle: this.roomName,
                        roomCnt: 1,
                        roomCapacity: this.roomUserCount,
                        roomOwner: this.userId,
                        // num: this.roomItems.length + 1,
                        // tit: this.roomName,
                        // own: 'test',
                        // userNowNum: 0,
                        // userNum: this.roomUserCount
                    }
                    console.log('about to create a new room')
                    this.$socket.emit('room.create', newRoom)
                    // this.roomItems.push(newRoom)
                    this.resetNewRoomModal()
                },
                resetNewRoomModal: function () {
                    this.roomName = null
                    this.roomUserCount = 1

                    this.closeModal()
                }
            },
            filters: {
                formatRoomNum: function (num) {
                    return String(num).padStart(3, 0)
                }
            }
        })
    </script>
</body>

</html>